"""
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

http://projecteuler.net/problem=2

"""

from __future__ import division

import numpy as np



def sum_even_fibonaccis_below_value(max_value):
    """

    """

    # Simplest approach:
    # Generate ALL fibonacci terms below max_value
    #   then make a second pass summing up everything.
    #   possibly slow?

    pass

sample_fibonaccis = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
sample_fibonaccis_even = [n for n in sample_fibonaccis if (n % 2 == 0)]

assert sum_even_fibonaccis_below_value(100) == 44
assert sum_even_fibonaccis_below_value(100) == np.sum(sample_fibonaccis_even)


print sum_even_fibonaccis_below_value(4e6)
